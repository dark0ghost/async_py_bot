version: '3.3'

services:
  bot:
    build:
      context: .
      dockerfile:
        Dockerfile
    env_file:
       bot.evn
    restart:
       on-failure
    volumes:
        - ".:/usr/src/app"

  postgres:
    image:
       postgres
    volumes:
      - "./postgres/data:/var/lib/postgresql/data/pgdata"
    env_file:
      - pg.env
    restart:
        always
    ports:
        - 5432:5432

  redis:
    container_name: redis
    image:
      redis:alpine
    ports:
      - "6379:6379"
    command:
        - 'redis-server'
        - '--loglevel ${REDIS_LOGLEVEL:-warning}'
        - '--databases 2'
        - '--maxmemory ${REDIS_MAXMEM:-50mb}'
        - '--maxmemory-policy ${REDIS_POLICY:-noeviction}'
    volumes:
      - ../data/redis:/data
    restart: always

  influxdb:
    image: influxdb:1.8-alpine
    container_name: "influxdb"
    restart: always
    volumes:
      - "influxdb:/var/lib/influxdb"
    environment: # см. файл .env (в репозитории - .env_dist)
      - INFLUXDB_DB=${DB}
      - INFLUXDB_ADMIN_USER=${DB_ADMIN_USER}  # Этот юзер нужен для создания базы
      - INFLUXDB_ADMIN_USER_PASSWORD=${DB_ADMIN_PASS}
      - INFLUXDB_USER=${DB_USER}  # Этот юзер для записи в БД и чтения со стороны Grafana
      - INFLUXDB_USER_PASSWORD=${DB_PASS}
      - INFLUXDB_HTTP_AUTH_ENABLED=true

  grafana:
      image: grafana/grafana:7.3.4
      container_name: "grafana"
      volumes:
        - "grafana-data:/var/lib/grafana"
      environment:
        - GF_DATE_FORMATS_DEFAULT_TIMEZONE=browser
      ports:
        - "3000:3000"

  adminer:
    image:
       adminer
    restart:
      always
    ports:
      - 8080:8080